{"version":3,"sources":["components/Pagination/Posts.js","components/Pagination/PostList.js","components/Pagination/index.js","components/Table/datatable.js","components/Table/Table.js","components/Accordion/Fold.js","components/Accordion/Data.js","components/Accordion/index.js","components/ProgressBar/Progress.js","components/ProgressBar/index.js","components/StarRating/Star.js","components/StarRating/index.js","App.js","index.js"],"names":["Posts","posts","loading","className","map","post","i","key","id","title","Pagination","postsPerPage","totalPosts","paginate","currentPage","setCurrentPage","pageNumbers","Math","ceil","push","onClick","class","number","href","floor","useState","setPosts","setLoading","useEffect","a","axios","get","res","data","fetchPosts","indexOfLastPost","indexOfFirstPost","currentPosts","slice","PostList","length","pageNumber","Datatable","columns","Object","keys","cellPadding","cellSpacing","heading","row","column","Table","setData","q","setQ","searchColumns","setSearchColumns","rows","console","log","type","value","onChange","e","target","checked","includes","prev","filter","sc","some","toString","toLowerCase","indexOf","Fold","label","content","active","handle","Data","Accordion","setActive","foldNum","current","selectFold","ProgressBar","bgcolor","completed","fillerStyles","height","width","backgroundColor","transition","borderRadius","textAlign","contentStyle","display","justifyContent","color","style","padding","fontWeight","element","Progress","Star","starId","rating","onMouseEnter","onMouseLeave","styleClass","warn","viewBox","data-rating","stroke-width","points","StarRating","setRating","hoverRating","setHoverRating","star","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b7fe0f1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Posts = ({ posts, loading }) => {\r\n  if (loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='list-group mb-4'>\r\n      {posts.map((post, i) => (\r\n        <li key={post.id} className='list-group-item'>\r\n          {post.title}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import React from \"react\";\r\n\r\nconst Pagination = ({\r\n  postsPerPage,\r\n  totalPosts,\r\n  paginate,\r\n  currentPage,\r\n  setCurrentPage,\r\n}) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <nav className='d-flex justify-content-center'>\r\n      <ul className='pagination'>\r\n        {currentPage === 1 ? null : (\r\n          <>\r\n            <li onClick={() => setCurrentPage(1)} className='page-link'>\r\n              <i class='fas fa-angle-double-left'></i>\r\n            </li>\r\n            <li\r\n              onClick={() => setCurrentPage(currentPage - 1)}\r\n              className='page-link disabled'\r\n            >\r\n              <i class='fas fa-chevron-left'></i>\r\n            </li>\r\n          </>\r\n        )}\r\n\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)} href='/#' className='page-link'>\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n\r\n        {Math.floor(totalPosts / postsPerPage) === currentPage ? null : (\r\n          <>\r\n            <li\r\n              onClick={() => setCurrentPage(currentPage + 1)}\r\n              className='page-link'\r\n            >\r\n              <i class='fas fa-chevron-right'></i>\r\n            </li>\r\n            <li\r\n              onClick={() =>\r\n                setCurrentPage(Math.floor(totalPosts / postsPerPage))\r\n              }\r\n              className='page-link'\r\n            >\r\n              <i class='fas fa-angle-double-right'></i>\r\n            </li>\r\n          </>\r\n        )}\r\n\r\n        {/* <a\r\n          onClick={() => setCurrentPage(currentPage + 1)}\r\n          href='/#'\r\n          className='page-link'\r\n        >\r\n          <i class='fas fa-chevron-right'></i>\r\n        </a>\r\n        <a\r\n          onClick={() => setCurrentPage(Math.floor(totalPosts / postsPerPage))}\r\n          href='/#'\r\n          className='page-link'\r\n        >\r\n          <i class='fas fa-angle-double-right'></i>\r\n        </a> */}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Pagination\r\nimport Posts from \"./Posts\";\r\nimport PostList from \"./PostList\";\r\n\r\n//Api cal\r\nimport axios from \"axios\";\r\n\r\nconst Pagination = () => {\r\n  // pagination state\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage] = useState(10);\r\n\r\n  // get data into posts\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      setLoading(true);\r\n      const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n      setPosts(res.data);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  // Get current posts\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className='container mt-5 '>\r\n      <h1 className='text-primary mb-3 d-flex justify-content-center'>\r\n        My Blog\r\n      </h1>\r\n      <Posts posts={currentPosts} loading={loading} />\r\n      <PostList\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={posts.length}\r\n        paginate={paginate}\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nexport default function Datatable({ data }) {\r\n  const columns = data[0] && Object.keys(data[0]);\r\n  return (\r\n    <table cellPadding={0} cellSpacing={0}>\r\n      <thead>\r\n        <tr>{data[0] && columns.map((heading) => <th>{heading}</th>)}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row) => (\r\n          <tr>\r\n            {columns.map((column) => (\r\n              <td>{row[column]}</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Datatable from \"./datatable\";\r\n\r\nconst Table = () => {\r\n  const [data, setData] = useState([]);\r\n  const [q, setQ] = useState(\"\");\r\n  const [searchColumns, setSearchColumns] = useState([\"state\"]);\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      const res = await axios.get(\r\n        \"https://devmentor.live/api/examples/contacts?api_key=b7c58b\"\r\n      );\r\n      setData(res.data.slice(0, 15));\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  function search(rows) {\r\n    return rows.filter((row) =>\r\n      searchColumns.some(\r\n        (column) =>\r\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\r\n      )\r\n    );\r\n  }\r\n\r\n  const columns = data[0] && Object.keys(data[0]);\r\n  console.log(columns);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <input type='text' value={q} onChange={(e) => setQ(e.target.value)} />\r\n        {columns &&\r\n          columns.map((column) => (\r\n            <label>\r\n              <input\r\n                type='checkbox'\r\n                checked={searchColumns.includes(column)}\r\n                onChange={(e) => {\r\n                  const checked = searchColumns.includes(column);\r\n                  setSearchColumns((prev) =>\r\n                    checked\r\n                      ? prev.filter((sc) => sc !== column)\r\n                      : [...prev, column]\r\n                  );\r\n                }}\r\n              />\r\n              {column}\r\n            </label>\r\n          ))}\r\n      </div>\r\n      <div>\r\n        <Datatable data={search(data)} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./styles.scss\";\r\n\r\nconst Fold = ({ label, content, active, handle }) => {\r\n  return (\r\n    <div className='fold'>\r\n      <button\r\n        className={`fold_trigger ${active ? \"open\" : \"\"}`}\r\n        onClick={handle}\r\n      >\r\n        {label}\r\n      </button>\r\n      <div key='content' className={`fold_content ${active ? \"open\" : \"\"}`}>\r\n        {active ? content : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fold;\r\n","const Data = [\r\n  {\r\n    label: \"Seriously, Don't Use Icon Fonts\",\r\n    content:\r\n      'Icons are everywhere. These \"little miracle workers\" (as John Hicks described them) help us reinforce meaning in the interfaces we design and build. Their popularity in web design has never been greater; the conciseness and versatility of pictograms in particular make them a lovely fit for displays large and small. But icons on the web have had their fair share of challenges.',\r\n  },\r\n  {\r\n    label: \"Screen Readers Actually Read That Stuff\",\r\n    content:\r\n      'Most assistive devices will read aloud text inserted via CSS, and many of the Unicode characters icon fonts depend on are no exception. Best-case scenario, your \"favorite\" icon gets read aloud as \"black favorite star.\" Worse-case scenario, it\\'s read as \"unpronounceable\" or skipped entirely.',\r\n  },\r\n  {\r\n    label: \"They Fail Poorly and Often\",\r\n    content:\r\n      'When your icon font fails, the browser treats it like any other font and replaces it with a fallback. Best-case scenario, you\\'ve chosen your fallback characters carefully and something weird-looking but communicative still loads. Worse-case scenario (and far more often), the user sees something completely incongruous, usually the dreaded \"missing character\" glyph.',\r\n  },\r\n  {\r\n    label: \"They're a Nightmare if You're Dyslexic\",\r\n    content:\r\n      \"Many dyslexic people find it helpful to swap out a website's typeface for something like OpenDyslexic. But icon fonts get replaced as well, which makes for a frustratingly broken experience.\",\r\n  },\r\n  {\r\n    label: \"There's Already a Better Way\",\r\n    content:\r\n      \"SVG is awesome for icons! It's a vector image format with optional support for CSS, JavaScript, reusability, accessibility and a bunch more. It was made for this sort of thing.\",\r\n  },\r\n];\r\n\r\nexport default Data","import React, { useState } from \"react\";\r\nimport Fold from \"./Fold\";\r\nimport Data from \"./Data\";\r\n\r\nconst Accordion = () => {\r\n  const [active, setActive] = useState(0);\r\n\r\n  const selectFold = (foldNum) => {\r\n    const current = active === foldNum ? -1 : foldNum;\r\n    setActive(() => current);\r\n  };\r\n\r\n  return (\r\n    <div className='accordion'>\r\n      {Data.map((content, i) => {\r\n        return (\r\n          <Fold\r\n            key={`${i}-${content.title}`}\r\n            {...content}\r\n            handle={() => selectFold(i)}\r\n            active={i === active}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\n// import { FaFileExcel } from \"react-icons/fa\";\r\n\r\nconst ProgressBar = ({ bgcolor, completed }) => {\r\n  // const { bgcolor, completed } = props;\r\n\r\n  const containerStyles = {\r\n    height: 20,\r\n    width: \"100%\",\r\n    backgroundColor: \"#e0e0de\",\r\n    borderRadius: 50,\r\n    // marginTop:0,\r\n    // marginBottom:0,\r\n    // marginRight:10,\r\n    // marginLeft:10\r\n    // margin: 0 50,\r\n  };\r\n\r\n  const fillerStyles = {\r\n    height: \"100%\",\r\n    width: `${completed}%`,\r\n    backgroundColor: bgcolor,\r\n    transition: \"width 1s ease-in-out\",\r\n    borderRadius: \"inherit\",\r\n    textAlign: \"right\",\r\n  };\r\n\r\n  const labelStyles = {\r\n    padding: 5,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const contentStyle ={\r\n    display:\"flex\",\r\n    justifyContent: \"space-between\",\r\n    color: bgcolor,\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div style={contentStyle}>\r\n      <p>CSS</p>\r\n      <p>75%</p>\r\n    </div>\r\n    <div style={containerStyles}>\r\n      <div style={fillerStyles}>\r\n        <span style={labelStyles}>{`${completed}%`}</span>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport Progress from \"./Progress\";\r\nconst ProgressBar = () => {\r\n  const data = [\r\n    {\r\n      bgcolor: \"#6a1b9a\",\r\n      completed: 60,\r\n    },\r\n    {\r\n      bgcolor: \"#6a1b9a\",\r\n      completed: 80,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {data.map((element, i) => (\r\n        <Progress\r\n          key={i}\r\n          bgcolor={element.bgcolor}\r\n          completed={element.completed}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from \"react\";\r\nimport \"./Star.css\";\r\n\r\nconst Star = ({ starId, rating, onMouseEnter, onMouseLeave, onClick }) => {\r\n  let styleClass = \"star-rating-blank\";\r\n  if (rating && rating >= starId) {\r\n    styleClass = \"star-rating-filled\";\r\n  }\r\n  console.warn(onMouseEnter, onMouseLeave)\r\n  return (\r\n    <div\r\n      className='star'\r\n      onMouseEnter={onMouseEnter}\r\n      onMouseLeave={onMouseLeave}\r\n      onClick={onClick}\r\n    >\r\n      <svg\r\n        height='55px'\r\n        width='53px'\r\n        class={styleClass}\r\n        viewBox='0 0 25 23'\r\n        data-rating='1'\r\n      >\r\n        <polygon\r\n          stroke-width='0'\r\n          points='9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78'\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Star;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Star from \"./Star\";\r\nimport \"./Star.css\";\r\n\r\nconst StarRating = () => {\r\n  const [rating, setRating] = useState(0);\r\n  const [hoverRating, setHoverRating] = useState(0);\r\n  const stars = [1, 2, 3, 4, 5];\r\n  \r\nuseEffect(()=>{\r\n\r\n},[rating, hoverRating])\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='flex-container'>\r\n        {stars.map((star, i) => (\r\n          <Star\r\n          key={i}\r\n          starId={i}\r\n          rating={hoverRating || rating}\r\n          onMouseEnter={() => setHoverRating(i)}\r\n          onMouseLeave={() => setHoverRating(0)}\r\n          onClick={() => setRating(i)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarRating;\r\n","import React from \"react\";\r\n//Pagination\r\nimport Pagination from \"./components/Pagination\";\r\n//Table\r\nimport Table from \"./components/Table/Table\";\r\n//Accordion\r\nimport Accordion from \"./components/Accordion\";\r\n// Progress Bar\r\nimport ProgressBar from \"./components/ProgressBar\";\r\n// Star Rating\r\nimport Star from \"./components/StarRating\";\r\n\r\n//CSS\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className='container mt-5'>\r\n      <Pagination />\r\n      <Table />\r\n      <Accordion />\r\n      <ProgressBar />\r\n      <Star />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}